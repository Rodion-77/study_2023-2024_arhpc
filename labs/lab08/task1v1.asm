%include 'in_out.asm'
SECTION .data
msg db "Результат: ", 0
msg2 db "Функция: f(x)=2x+15", 0
SECTION .text
global _start
_start:
pop ecx           ; Извлекаем из стека количество аргументов
pop edx           ; Извлекаем из стека имя программы
sub ecx, 1        ; Уменьшаем ecx на 1 (только аргументы, без имени программы)
mov esi, 0        ; Используем esi для хранения промежуточной суммы
next:
cmp ecx, 0        ; Проверяем, остались ли аргументы
jz _end           ; Если нет, переходим к завершению программы
pop eax           ; Извлекаем следующий аргумент из стека
call atoi         ; Преобразуем строку в число
mov ebx, 2        ; Умножаем на 2
mul ebx
add eax, 15       ; Добавляем 15
add esi, eax      ; Суммируем результат с текущей суммой
loop next         ; Переходим к обработке следующего аргумента
_end:
mov eax, msg2     ; Выводим сообщение с функцией
call sprintLF
mov eax, msg      ; Выводим сообщение "Результат: "
call sprint
mov eax, esi      ; Записываем сумму в регистр eax
call iprintLF     ; Выводим результат
call quit         ; Завершаем программу
